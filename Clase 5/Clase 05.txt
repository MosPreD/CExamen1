Matrices

Una matriz es un array multidimensional. Se definen igual que los vectores excepto que se requiere un índice por cada dimensión.



Su sintaxis es la siguiente:



tipo nombre [tamaño 1][tamaño 2]...;



Una matriz bidimensional se podría representar gráficamente como una tabla con filas y columnas.



La matriz tridimensional se utiliza, por ejemplo, para trabajos gráficos con objetos 3D.



En el ejemplo puedes ver como se rellena y visualiza una matriz bidimensional. Se necesitan dos bucles para cada una de las operaciones. Un bucle controla las filas y otro las columnas.



EJEMPLO

#include <stdio.h> 

 int main() /* Rellenamos una matriz */ 

 {      int x,i,numeros[3][4];

        for (x=0;x<3;x++) 

             for (i=0;i<4;i++)

            { 

              scanf("%d",&numeros[x][i]);

              getchar(); 

            }

        for (x=0;x<3;x++) 

       {

         for (i=0;i<4;i++)

         printf("%d ",numeros[x][i]);

         printf("\n");

         } 

 return 0;

 }



Si al declarar una matriz también queremos inicializarla, habrá que tener en cuenta el orden en el que los valores son asignados a los elementos de la matriz. Veamos algunos ejemplos:



int numeros[3][4]={{1,2,3,4},{5,6,7,8},{9,10,11,12}};



Quedarían asignados de la siguiente manera:

numeros[0][0]=1 numeros[0][1]=2 numeros[0][2]=3 numeros[0][3]=4

numeros[1][0]=5 numeros[1][1]=6 numeros[1][2]=7 numeros[1][3]=8

numeros[2][0]=9 numeros[2][1]=10 numeros[2][2]=11 numeros[2][3]=12



Para pasar como un parámetro la matriz, se pueden hacer de dos maneras posibles por el momento:

Llamada 1:

funcion_matriz_1(matriz);

cabecera de la funcion al recibir

void  funcion_matriz_1(int matriz[][5]);

donde 5 es una constante que debe ser conocido así como se debe saber por defecto la dimensión de la fila



Llamada 2:

funcion_matriz_2(5,6,matriz);

cabecera de la funcion al recibir

void  funcion_matriz_2(int x,int y, int matriz[x][y]);

Donde x e y son variables pasadas por valor y permiten que la matriz pueda ser declarada con parámetros dinámicos.